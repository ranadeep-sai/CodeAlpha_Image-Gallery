<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Gallery</title>
    <style>
        /* Basic Resets */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }

        h1 {
            margin-bottom: 30px;
            color: #333;
        }

        .gallery-container {
            width: 90%;
            max-width: 1200px;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .image-grid img {
            width: 100%;
            height: 200px; /* Fixed height for thumbnails */
            object-fit: cover;
            border-radius: 5px;
            cursor: pointer;
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }

        .image-grid img:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }

        /* Navigation Buttons */
        .navigation-buttons {
            margin-top: 20px;
        }

        .navigation-buttons button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 0 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .navigation-buttons button:hover {
            background-color: #0056b3;
        }

        /* Lightbox */
        .lightbox {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0, 0, 0, 0.9); /* Black w/ opacity */
            justify-content: center; /* Use flexbox for centering */
            align-items: center; /* Use flexbox for centering */
        }

        .lightbox-content {
            margin: auto;
            display: block;
            max-width: 80%;
            max-height: 80%;
            border-radius: 5px;
            animation: zoomIn 0.3s ease-out;
        }

        @keyframes zoomIn {
            from {
                transform: scale(0.8);
                opacity: 0;
            }
            to {
                transform: scale(1);
                opacity: 1;
            }
        }

        .close-btn {
            position: absolute;
            top: 15px;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            transition: 0.3s;
            cursor: pointer;
        }

        .close-btn:hover,
        .close-btn:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }

        /* Bonus: Filter Buttons Styling (Uncomment and expand as needed) */
        /*
        .filters {
            margin-bottom: 20px;
        }

        .filter-btn {
            background-color: #e0e0e0;
            border: none;
            padding: 8px 15px;
            margin: 0 5px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

        .filter-btn:hover {
            background-color: #d0d0d0;
        }

        .filter-btn.active {
            background-color: #007bff;
            color: white;
        }
        */

        /* Responsive Design */
        @media (max-width: 768px) {
            .image-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }

            .lightbox-content {
                max-width: 95%;
                max-height: 70%;
            }

            .close-btn {
                top: 10px;
                right: 20px;
                font-size: 30px;
            }
        }

        @media (max-width: 480px) {
            .image-grid {
                grid-template-columns: 1fr; /* Stack images on small screens */
            }

            .navigation-buttons button {
                padding: 8px 15px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <h1>My Awesome Image Gallery</h1>

    <div class="gallery-container">
        <div class="image-grid">
            <img src="eiffel.png" alt="Eiffel Tower at Night" data-category="landmarks">
            <img src="biryani.png" alt="Delicious Biryani" data-category="food">
            <img src="tiger.png" alt="Tiger in the wild" data-category="wildlife">
            <img src="cricket.png" alt="Cricket Team Celebrating Victory" data-category="sports">
            <img src="beach.png" alt="Sunny Beach with Buildings" data-category="travel">
            <img src="rollsroyce.png" alt="White Rolls Royce Phantom" data-category="vehicles">
        </div>

        <div class="navigation-buttons">
            <button id="prevBtn">Previous</button>
            <button id="nextBtn">Next</button>
        </div>
    </div>

    <div id="lightbox" class="lightbox">
        <span class="close-btn">&times;</span>
        <img class="lightbox-content" id="lightboxImg" src="" alt="">
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const images = document.querySelectorAll('.image-grid img');
            const lightbox = document.getElementById('lightbox');
            const lightboxImg = document.getElementById('lightboxImg');
            const closeBtn = document.querySelector('.close-btn');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');

            let currentImageIndex = 0;

            // Open Lightbox
            images.forEach((img, index) => {
                img.addEventListener('click', () => {
                    currentImageIndex = index;
                    openLightbox(img.src);
                });
            });

            // Close Lightbox
            closeBtn.addEventListener('click', closeLightbox);
            lightbox.addEventListener('click', (e) => {
                if (e.target === lightbox) { // Close if clicked outside the image
                    closeLightbox();
                }
            });

            // Keyboard navigation for lightbox
            document.addEventListener('keydown', (e) => {
                if (lightbox.style.display === 'flex') { // Check if lightbox is open
                    if (e.key === 'ArrowRight') {
                        showNextImage();
                    } else if (e.key === 'ArrowLeft') {
                        showPrevImage();
                    } else if (e.key === 'Escape') {
                        closeLightbox();
                    }
                }
            });

            // Navigation Buttons
            prevBtn.addEventListener('click', showPrevImage);
            nextBtn.addEventListener('click', showNextImage);

            function openLightbox(src) {
                lightbox.style.display = 'flex';
                lightboxImg.src = src;
            }

            function closeLightbox() {
                lightbox.style.display = 'none';
                lightboxImg.src = ''; // Clear image src
            }

            function showNextImage() {
                currentImageIndex = (currentImageIndex + 1) % images.length;
                lightboxImg.src = images[currentImageIndex].src;
            }

            function showPrevImage() {
                currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
                lightboxImg.src = images[currentImageIndex].src;
            }

            /*
            // Bonus: Image Filters/Categories (Uncomment and expand as needed)
            const filterButtons = document.querySelectorAll('.filter-btn');

            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const filter = button.dataset.filter;
                    filterImages(filter);

                    // Update active class
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    button.classList.add('active');
                });
            });

            function filterImages(category) {
                images.forEach(img => {
                    const imgCategory = img.dataset.category;
                    if (category === 'all' || imgCategory === category) {
                        img.style.display = 'block'; // Or 'grid-item' depending on your display property
                    } else {
                        img.style.display = 'none';
                    }
                });
            }
            */
        });
    </script>
</body>
</html>
